# nginx configuration for Android testing
# Supports HTTP/1.1, HTTP/2, HTTP/3, TLS 1.3, and QUIC

# Main context
user nobody;
worker_processes auto;
error_log /data/local/tmp/nginx/logs/error.log warn;
pid /data/local/tmp/nginx/logs/nginx.pid;

# Events context
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# HTTP context
http {
    # Basic settings
    include /data/local/tmp/nginx/conf/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'proto=$server_protocol version=$http2';
    
    access_log /data/local/tmp/nginx/logs/access.log main;
    
    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Brotli compression (if available)
    brotli on;
    brotli_comp_level 6;
    brotli_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # SSL/TLS settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=63072000" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # HTTP/3 and QUIC settings
    quic_retry on;
    ssl_early_data on;
    
    # Default server (HTTP)
    server {
        listen 8080;
        listen [::]:8080;
        server_name localhost;
        root /data/local/tmp/nginx/html;
        index index.html index.htm;
        
        # Add protocol information to response headers
        add_header X-Protocol $server_protocol always;
        add_header X-HTTP-Version "1.1" always;
        
        location / {
            try_files $uri $uri/ =404;
        }
        
        location /status {
            stub_status on;
            access_log off;
        }
        
        location /api/test {
            add_header Content-Type application/json;
            return 200 '{"status":"ok","protocol":"http/1.1","server":"nginx"}';
        }
    }
    
    # HTTPS server with HTTP/2
    server {
        listen 8443 ssl http2;
        listen [::]:8443 ssl http2;
        server_name localhost;
        root /data/local/tmp/nginx/html;
        index index.html index.htm;
        
        # SSL certificate files
        ssl_certificate /data/local/tmp/nginx/certs/server.crt;
        ssl_certificate_key /data/local/tmp/nginx/certs/server.key;
        ssl_dhparam /data/local/tmp/nginx/certs/dhparam.pem;
        
        # Add protocol information to response headers
        add_header X-Protocol $server_protocol always;
        add_header X-HTTP-Version "2.0" always;
        add_header Alt-Svc 'h3=":8444"; ma=86400' always;
        
        location / {
            try_files $uri $uri/ =404;
        }
        
        location /status {
            stub_status on;
            access_log off;
        }
        
        location /api/test {
            add_header Content-Type application/json;
            return 200 '{"status":"ok","protocol":"http/2","server":"nginx","tls":"1.3"}';
        }
    }
    
    # HTTP/3 server with QUIC
    server {
        listen 8444 quic reuseport;
        listen [::]:8444 quic reuseport;
        server_name localhost;
        root /data/local/tmp/nginx/html;
        index index.html index.htm;
        
        # SSL certificate files
        ssl_certificate /data/local/tmp/nginx/certs/server.crt;
        ssl_certificate_key /data/local/tmp/nginx/certs/server.key;
        
        # Add protocol information to response headers
        add_header X-Protocol $server_protocol always;
        add_header X-HTTP-Version "3.0" always;
        add_header Alt-Svc 'h3=":8444"; ma=86400' always;
        
        location / {
            try_files $uri $uri/ =404;
        }
        
        location /status {
            stub_status on;
            access_log off;
        }
        
        location /api/test {
            add_header Content-Type application/json;
            return 200 '{"status":"ok","protocol":"http/3","server":"nginx","quic":"enabled"}';
        }
    }
}
